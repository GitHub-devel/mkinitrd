.\" Copyright (C) 2007 SuSE Linux Products GmbH
.TH mkinitrd 5 "6 August 2007" "mkinitrd" "mkinitrd"
.SH NAME
mkinitrd \- description of modular scripts layout
.SH DESCRIPTION
.B "mkinitrd"
creates initial ramdisk images for booting Linux. It is designed to be
modular, so that functionality required by other programs can be
maintained in separate scripts.
.SH DIRECTORY LAYOUT
All files are located in the directory
.B "/lib/mkinitrd"
.
The directory has the following layout:
.TP
.B bin
External program required during boot
.TP
.B dev
Additional devices nodes to be copied into the mkinitrd.
.TP
.B scripts
Repository for mkinitrd scripts
.TP
.B setup
Resolved links for scripts to be executed during creation of the
initrd
.TP
.B boot
Resolved links for scripts to be executed during boot.

.SH SCRIPT REPOSITORY
The directory
.B "/lib/mkinitrd/scripts"
is the repository for all mkinitrd scripts. They follow the naming
convention
.RS
.nf
.ft B
.sp
<type>-<name>.sh
.ft R
.fi
.RE
.LP
.I <type>
can be either
.I setup
for scripts to be called during initrd creation or
.I boot
for scripts to be called during boot. The
.I <name>
for a script serves as an identification for the implemented feature;
it is assumed that scripts named
.B boot-foo.sh
and
.B setup-foo.sh
both refer to the feature
.I foo

.SH SCRIPT SYMLINK RESOLUTION
The directories
.B "/lib/mkinitrd/setup"
and
.B "/lib/mkinitrd/boot"
hold the resolved symlinks to the scripts in the mkinitrd
repository. The symlinks have the naming convention
.RS
.nf
.ft B
.sp
<number>-<name>.sh
.ft R
.fi
.RE
.LP
where
.I <number>
determines the execution order (lower numbers will be executed
earlier) and
.I <name>
is the names of the script as mentioned in the previous section. The
symlinks are maintained by the program
.B "/sbin/mkinitrd_setup"
which evaluates the tags in the scripts and creates symlinks with the
correct name. Manual maintenance in the
.B "/lib/mkinitrd/setup"
or
.B "/lib/mkinitrd/boot"
directories are strongly discouraged, as any call to
.B "/sbin/mkinitrd_setup"
will remove the manually created links.

.SH SCRIPT KEYWORDS
The execution order of the mkinitrd scripts is determined by
keywords. The following keywords are recognized:

.TP
.B #%stage: \fI<name>\fB
The execution stage for this script
.TP
.B #%depends: \fI<list\fB
Space-separated list of features or scripts names this script depends upon.
.TP
.B #%provides: \fI<list>\fB
Space-separated list of additional features provided by this script.
.LP
Each script provides per default a feature with the script name, so that
.I setup-foo.sh
automatically provides a feature
.I foo.

All dependend scripts (i.e. any feature listed in the
.I #%depends:
list) will be executed prior to this script.

.SH EXECUTION STAGES
Script execution is gouverned by
.I stages.
The stages define the overall execution order as each stage is
executed sequentially. The defined stages are:
.TP
.B setup
General preparation
.TP
.B filesystem
Filesystem detection and maintenance
.TP
.B crypto
Handling of cryptographic volumes
.TP
.B volumemanager
Handling of LVM2 and EVMS volumes
.TP
.B softraid
Detection and setup of MD devices
.TP
.B partitions
Detection and setup of partitions.
.TP
.B devicemapper
Device-mapper devices presenting full disks, e.g. multipath and dmraid
.TP
.B block
Detection and setup of block devices.
.TP
.B device
Detection and setup of hardware devices
.TP
.B boot
Final cleanups / preparation

.LP
During
.I setup
the stages are executed from
.B setup
to
.B boot ;
during
.I boot
the stages are executed in reversed order. The stages itself are
defined corresponding to the Novell Storage Foundation Layout. This
induces some restrictions to the possible device setups, as e.g. MD
over LVM is not supported.
.LP
The stages are executed sequentially. All scripts for a stage have to
be executed before those for the next stage are evaluated. Within a
stage scripts can run parallel where possible.
.LP
As each stage serves as a checkpoint it is
.B not
possible to have dependencies across stages. So script
.I foo
in stage
.I filesystem
cannot depend on script
.I bar
in stage
.I block

.SH SCRIPT INSTALLATION
New scripts should be copied to
.B "/lib/mkinitrd/scripts"
and the appropriate keywords should be inserted.
Afterwards
.B "/sbin/mkinitrd_setup"
should be executed to update the symlinks in
.I boot
and 
.I setup

.LP
For removal the scripts should be deleted and
.B "/sbin/mkinitrd_setup"
should be called to update the symlinks.

.SH AUTHORS
Steffen Winterfeldt <snwint@suse.de>, Susanne Oberhauser
<froh@suse.de>, Andreas Gruenbacher <agruen@suse.de>, Hannes Reinecke
<hare@suse.de>, Alexander Graf <agraf@suse.de>

.SH FILES
.PP
/lib/mkinitrd
/sbin/mkinitrd
/sbin/mkinitrd_setup

.SH "SEE ALSO"
.PP
\fBmkinitrd\fR(8)

